@page "/signup"
@using Qalakar.Data
@inject UserService UserService
@rendermode InteractiveServer
<PageTitle>Sign Up</PageTitle>
<Navbar />
<div class="container d-flex justify-content-center align-items-center min-vh-100">
    <div class="card shadow-lg p-4" style="max-width: 500px; width: 100%; border-radius: 15px;">
        <div class="card-body">
            <h3 class="card-title text-center mb-4">Create Your Account</h3>
            <EditForm Model="newUser" OnValidSubmit="SaveUser">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger mb-3" />
                
                <div class="mb-3 position-relative">
                    <InputText id="firstName" @bind-Value="newUser.FirstName" class="form-control" placeholder=" " />
                    <label for="firstName" class="form-label floating-label">First Name</label>
                    <span class="position-absolute top-50 end-0 translate-middle-y me-3"><i class="bi bi-person"></i></span>
                </div>
                
                <div class="mb-3 position-relative">
                    <InputText id="lastName" @bind-Value="newUser.LastName" class="form-control" placeholder=" " />
                    <label for="lastName" class="form-label floating-label">Last Name</label>
                    <span class="position-absolute top-50 end-0 translate-middle-y me-3"><i class="bi bi-person"></i></span>
                </div>
                
                <div class="mb-3 position-relative">
                    <InputNumber id="age" @bind-Value="newUser.Age" class="form-control" placeholder=" " />
                    <label for="age" class="form-label floating-label">Age</label>
                    <span class="position-absolute top-50 end-0 translate-middle-y me-3"><i class="bi bi-calendar"></i></span>
                </div>
                
                <div class="mb-3 position-relative">
                    <InputText id="email" @bind-Value="newUser.Email" class="form-control" placeholder=" " />
                    <label for="email" class="form-label floating-label">Email</label>
                    <span class="position-absolute top-50 end-0 translate-middle-y me-3"><i class="bi bi-envelope"></i></span>
                </div>
                
                <div class="mb-4 position-relative">
                    <InputText id="password" type="password" @bind-Value="newUser.Password" class="form-control" placeholder=" " />
                    <label for="password" class="form-label floating-label">Password</label>
                    <span class="position-absolute top-50 end-0 translate-middle-y me-3"><i class="bi bi-lock"></i></span>
                </div>
                
                <div class="d-grid">
                    <button type="submit" class="btn btn-primary btn-lg" style="border-radius: 10px; transition: all 0.3s;">Sign Up</button>
                </div>
            </EditForm>

            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
                    @successMessage
                    <button type="button" class="btn-close" @onclick="() => successMessage = string.Empty"></button>
                </div>
            }

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
                    @errorMessage
                    <button type="button" class="btn-close" @onclick="() => errorMessage = string.Empty"></button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    User newUser = new();
    string successMessage = string.Empty;
    string errorMessage = string.Empty;

    async Task SaveUser()
    {
        try
        {
            await UserService.AddUserAsync(newUser);
            successMessage = "User successfully registered!";
            errorMessage = string.Empty;
            newUser = new(); // Reset form
        }
        catch (Exception ex)
        {
            errorMessage = $"Error registering user: {ex.Message}";
            successMessage = string.Empty;
            Console.WriteLine($"Error saving user: {ex.Message}");
        }
    }
}